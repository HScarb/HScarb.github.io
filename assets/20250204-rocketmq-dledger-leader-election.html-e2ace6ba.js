import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as u,a as n,b as s,d as a,e}from"./app-259499e5.js";const i={},k={href:"http://hscarb.github.io/rocketmq/20250204-rocketmq-dledger-leader-election.html",target:"_blank",rel:"noopener noreferrer"},r=e('<h1 id="rocketmq-dledger-leader-选举-流程详解-源码解析" tabindex="-1"><a class="header-anchor" href="#rocketmq-dledger-leader-选举-流程详解-源码解析" aria-hidden="true">#</a> RocketMQ DLedger Leader 选举 流程详解 &amp; 源码解析</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>在 RocketMQ 4.5.0 版本以前，只提供了主从同步功能，但是主节点宕机之后从节点只能读不能写，没有主从切换能力。RocketMQ 4.5.0 引入了 DLedger 来实现主从切换。</p><p>DLedger 是基于 Raft 算法的 WAL 实现，它是为消息场景量身定制的，提供了日志写入和读取的接口，且对顺序读出和随机读出做了优化，充分适应消息系统消峰填谷的需求。</p><p>在 RocketMQ 4.8.0 版本以前，DLedger 模式的性能比主备模式差 1 个数量级<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>，所以建议用尽可能新的版本部署。</p><p>DLedger 的实现大体可以分为两个部分，Leader 选举和日志复制，本文基于 DLedger 0.2.7 版本源码详解 Leader 选举的设计和流程。</p><h2 id="_2-概要设计" tabindex="-1"><a class="header-anchor" href="#_2-概要设计" aria-hidden="true">#</a> 2. 概要设计</h2><h3 id="_2-1-节点状态流转" tabindex="-1"><a class="header-anchor" href="#_2-1-节点状态流转" aria-hidden="true">#</a> 2.1 节点状态流转</h3><p>DLedger 的主从同步主要是实现了 Raft 协议，我们先来看一下 Raft 协议中节点的 3 个角色之间的行为和转换。</p>',9),d=e('<p>Raft 选主的过程中有一些重要的请求类型：</p><ul><li>心跳请求：Leader 节点定期发送心跳请求给其他节点，以维持领导地位。</li><li>投票请求：Candidate 节点在选举超时后，会发起投票请求，向其他节点请求投票。由于是向其他节点请求投票，所以我们后面把它称为<strong>拉票请求</strong>方便理解。</li><li>其它的客户端请求和日志追加请求不在 Leader 选举流程中，本文暂不展开。</li></ul><p>Raft 选主流程中还有两个重要的 timeout：</p><ul><li>心跳超时：Leader 节点发送心跳请求给其他节点的间隔时间，DLedger 里是 2s。</li><li>选举超时：Follower 在选举超时后，会成为 Candidate，启动选主流程。DLedger 里是 3 倍的心跳超时，即 6s。</li></ul><p>下面我们看一下每种角色的节点的行为。</p><h4 id="_2-2-follower" tabindex="-1"><a class="header-anchor" href="#_2-2-follower" aria-hidden="true">#</a> 2.2 Follower</h4><ul><li>行为： <ul><li>启动计时器，时间为选举超时（Election timeout）。</li></ul></li><li>发起请求：无</li><li>处理请求： <ul><li>Candidate 拉票请求：如果没有投过票则返回投票，更新投票轮次（为请求的轮次），并记录投票给谁。</li><li>Leader 心跳请求：收到后会返回响应并重新启动计时器。</li></ul></li><li>状态转移： <ul><li>计时器到期：转换成 Candidate。</li></ul></li></ul><h4 id="_2-3-leader" tabindex="-1"><a class="header-anchor" href="#_2-3-leader" aria-hidden="true">#</a> 2.3 Leader</h4><ul><li>行为： <ul><li>处理所有客户端请求和日志复制</li><li>每过心跳超时（Heartbeat timeout），向所有其他节点发送心跳请求，维持统治。</li></ul></li><li>发起请求： <ul><li>向其他节点发送心跳请求，处理心跳响应。如果收到的响应的轮次大于当前轮次，则转换为 Follower。</li></ul></li><li>处理请求： <ul><li>Candidate 拉票请求： <ul><li>轮次大于当前，转换成 Follower。</li><li>轮次小于等于当前，无动作。</li></ul></li><li>Leader 心跳请求： <ul><li>轮次小于当前，无动作。</li><li>轮次大于当前，转换成 Follower。</li><li>轮次等于当前，可能是由于发生网络分区导致出现多个 Leader，都降为 Follower 重新选举。</li></ul></li><li>客户端请求：处理日志复制</li></ul></li><li>状态转移： <ul><li>发现其他节点的心跳请求响应有更大的投票轮次：转换成 Follower。</li></ul></li></ul><h4 id="_2-4-candidate" tabindex="-1"><a class="header-anchor" href="#_2-4-candidate" aria-hidden="true">#</a> 2.4 Candidate</h4><ul><li>行为： <ul><li>发起新的选举轮次（term += 1），给自己投票，然后向其他节点发起拉票请求。 <ul><li>刚进入 Candidate 状态会发起新的投票轮次，先给自己投票。</li><li>发起投票后，启动计时器，统计选举超时。当计时器到期仍未得到半数以上投票，开启新的投票轮次。</li></ul></li></ul></li><li>发起请求： <ul><li>选举轮次启动时，给其他节点发拉票请求，获取其他节点的投票响应。</li></ul></li><li>处理请求： <ul><li>其他 Candidate 拉票请求：如果其他 Candidate 投票轮次大于当前轮次，则投票给它并更新当前轮次。否则无动作。</li><li>Leader 心跳请求：对比投票轮次，如果大于等于当前轮次，则说明已经有 Leader 选出，自己转换成 Follower。</li></ul></li><li>状态转移： <ul><li>选票超过半数：转换成 Leader。</li><li>收到 Leader 心跳请求：此时其他节点已经是 Leader，转换成 Follower。</li><li>选票未超过半数（Split vote）：保持为 Candidate，在选举超时后开始新的选举轮次。</li></ul></li></ul><h2 id="_3-详细设计" tabindex="-1"><a class="header-anchor" href="#_3-详细设计" aria-hidden="true">#</a> 3. 详细设计</h2><p>下图是 3 个 DLedger 节点组成的集群，其中中间的是主节点，左右两个从节点。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2025/02/1738666165362.png" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>其中 <code>DLedgerStore</code> 是日志存储类，收到日志追加请求后把日志保存，然后推给 <code>DLedgerEntryPusher</code> 类。</p><p><code>DLedgerEntryPusher</code> 是 DLedger 的日志追加实现类，它会把本地的数据推到从节点的 <code>DLedgerEntryPusher</code>，在从节点上保存。</p><p><code>DLedgerLeaderElector</code> 则是负责 DLedger 主从切换的，它向其他节点收发心跳和投票请求，来执行主从切换。</p><h3 id="_3-1-类设计" tabindex="-1"><a class="header-anchor" href="#_3-1-类设计" aria-hidden="true">#</a> 3.1 类设计</h3>',18),m=e(`<p>上图为 DLedger 主要类的类图。</p><p>其中 <code>DLedgerServer</code> 表示一个 DLedger 节点，它是 Raft 协议集群节点的封装。</p><p><code>DLedgerProtocolHandler</code> 和 <code>DLedgerClientProtocolHandler</code> 分别是 DLedger 服务端和客户端的协议处理器接口，定义了一个 DLedger 节点需要实现的协议处理方法。</p><p><code>DLedgerProtocl</code> 和 <code>DLedgerClientProtocol</code> 分别是 DLedger 服务端和客户端的请求实现类，定义了一个 DLedger 节点需要实现的所有请求方法。</p><p><code>DLedgerServer</code> 封装了实现 DLedger 所需要的字段，下面我们一一说明它们的含义和作用。</p><ul><li><code>MemberState</code>：节点状态机，用于保存当前节点的角色（Leader/Follower/Candidate）、当前任期、当前日志写入状态、当前投票、对端节点列表等。</li><li><code>DLedgerStore</code>：日志存储类，用于操作当前节点的日志存储。</li><li><code>DLedgerRpcService</code>：DLedger 节点间通信类，实现了 <code>DLedgerProtocolHandler</code> 和 <code>DLedgerProtocol</code> 接口。它是 DLedger 节点发送请求和处理请求的入口。处理请求时，它会调用 <code>DLedgerServer</code> 的请求处理方法，本身不处理请求，仅作为代理转发。</li><li><code>DLedgerLeaderElector</code>：主从切换逻辑实现类，有一个服务线程不断运行节点的状态维护方法，根据节点角色的不同，执行不同的状态维护逻辑。这也是本文将着重解析的类。</li></ul><h3 id="_3-2-dledgerleaderelector-逻辑" tabindex="-1"><a class="header-anchor" href="#_3-2-dledgerleaderelector-逻辑" aria-hidden="true">#</a> 3.2 DLedgerLeaderElector 逻辑</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2025/02/1738666165975.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>DLedger 的选主逻辑与 Raft 标准的选主逻辑实现上有一些差异。</p><p><code>DLedgerLeaderElector</code> 负责节点的状态维护。它当中有一个 <code>StateMaintainer</code> 现成，负责触发节点的状态维护方法，即 <code>maintainState()</code>，它会根据节点当前的状态执行对应状态的状态维维护方法。每次执行完状态维护方法后，等待 10ms 再执行下一次状态维护方法。</p><p>下面详细分析每个状态维护的方法。</p><h4 id="_3-2-1-follower" tabindex="-1"><a class="header-anchor" href="#_3-2-1-follower" aria-hidden="true">#</a> 3.2.1 Follower</h4><p><code>maintainAsFollower()</code> 方法的逻辑如下：</p><p>如果在 3 个心跳周期内没有收到心跳请求，将角色转换为 Candidate。</p><h4 id="_3-2-2-leader" tabindex="-1"><a class="header-anchor" href="#_3-2-2-leader" aria-hidden="true">#</a> 3.2.2 Leader</h4><ul><li>如果当前时间距离上次发送心跳的时间超过心跳周期（2s），则向所有节点发送心跳，然后等待响应并仲裁结果。</li></ul><h4 id="_3-2-3-candidate" tabindex="-1"><a class="header-anchor" href="#_3-2-3-candidate" aria-hidden="true">#</a> 3.2.3 Candidate</h4><ul><li>如果到了下一次拉票请求的时间，则进行判断</li><li>如果当前节点不是 Candidate，无动作</li><li>上一次投票结果是需要等待下一轮投票，或需要立即开始下一轮投票 <ul><li>更新投票轮次，发起新一轮投票</li><li>否则，维持当前投票轮次</li></ul></li><li>向其他节点发拉票请求，等待所有节点响应并仲裁结果</li></ul><h4 id="_3-2-4-心跳请求" tabindex="-1"><a class="header-anchor" href="#_3-2-4-心跳请求" aria-hidden="true">#</a> 3.2.4 心跳请求</h4><h5 id="心跳请求发送、响应处理" tabindex="-1"><a class="header-anchor" href="#心跳请求发送、响应处理" aria-hidden="true">#</a> 心跳请求发送、响应处理</h5><p>发送心跳请求的方法是 <code>DLedgerLeaderElector#sendHeartbeats</code></p><ul><li>等待心跳响应，超过半数成功则继续。 <ul><li>如果半数以上 Follower 返回成功，则更新成功心跳时间戳。</li><li>如果没有达到半数以上 Follower 返回成功 <ul><li>成功 + 未准备的响应超过半数，立即发送下一次心跳</li><li>Follower 的最大投票 term 比当前节点大，当前节点切换成 Candidate</li><li>Follower 有其他的 Leader，当前节点切换成 Candidate</li><li>超过 3 个心跳周期都没有半数以上成功响应，当前节点切换成 Candidate，待收到 Leader 的心跳请求后变为 Follower</li></ul></li></ul></li></ul><h5 id="心跳请求处理" tabindex="-1"><a class="header-anchor" href="#心跳请求处理" aria-hidden="true">#</a> 心跳请求处理</h5><p>处理心跳请求的方法是 <code>DLedgerLeaderElector#handleHeartbeat</code></p><ul><li>发送节点的 term 小于当前节点的 term，告诉对方已经过期，需要重新选举。</li><li>term 相同，判断请求的节点是否是当前的 Leader <ul><li>如果请求节点是当前节点的 Leader，更新心跳时间戳，返回成功</li><li>如果当前节点还没有 Leader，切换角色为 Follower，设置 Leader</li><li>如果请求节点不是当前节点的 Leader，告诉对方 Leader 不一致，对方会切换回 Candidate，重新选举</li></ul></li><li>发送节点的 term 大于当前节点的 term，则当前节点切换为 Candidate，立即发起选举。</li></ul><h4 id="_3-2-5-拉票请求" tabindex="-1"><a class="header-anchor" href="#_3-2-5-拉票请求" aria-hidden="true">#</a> 3.2.5 拉票请求</h4><h5 id="拉票请求发送、响应处理" tabindex="-1"><a class="header-anchor" href="#拉票请求发送、响应处理" aria-hidden="true">#</a> 拉票请求发送、响应处理</h5><p>发送拉票请求的方法是 <code>DLedgerLeaderElector#voteForQuorumResponses</code></p><p>发送拉票请求时，会先投票给自己，然后把当前节点的状态、term 等信息放入请求中。</p><p>根据投票结果进行仲裁的逻辑如下：</p><ul><li>对端 term 大于当前节点 term，使用对端 term 进入 Candidate 角色。</li><li>已有 Leader，保持 Candidate 角色，待收到 Leader 的心跳请求后变为 Follower。重置下次拉票计时器，如果没有收到心跳的话在选举超时后会重新发起拉票请求。</li><li>有效投票未超过半数，重置下次拉票计时器，等待重新投票，不增加 term。</li><li>有效票超过半数，切换成 Leader</li><li>有效票 + 未准备好 超过半数，立即重新拉票</li><li>其他情况，重置下次拉票计时器，继续本轮拉票</li></ul><h5 id="拉票请求处理" tabindex="-1"><a class="header-anchor" href="#拉票请求处理" aria-hidden="true">#</a> 拉票请求处理</h5><p>处理拉票请求的方法是 <code>DLedgerLeaderElector#handleVote</code></p><ul><li>先根据 LedgerEndTerm 进行仲裁，LedgerEndTerm 是日志最后写入时的投票轮次。 <ul><li>如果请求拉票节点的 ledgerEndTerm 小于当前节点的 ledgerEndTerm，说明拉票节点的日志复制进度比当前低，无法成为 Leader，返回拒绝。</li><li>如果 ledgerEndTerm 相等，ledgerEndIndex 小于当前节点的 ledgerEndIndex，说明拉票节点的日志复制进度比当前低，无法成为 Leader，返回拒绝。</li></ul></li><li>然后根据 term 进行仲裁 <ul><li>如果请求拉票节点的 term 小于当前的 term，说明请求拉票节点已经过期，返回拒绝。</li><li>如果 term 相等，继续判断 <ul><li>如果当前节点未投票，继续下面逻辑</li><li>如果当前节点已投票给请求的节点，也继续下面逻辑</li><li>如果当前节点已投票给其他节点，拒绝投票，并返回自己投的 Leader</li></ul></li><li>如果请求拉票节点的 term 大于当前的 term，则当前节点用对方的 term 降级为 Candidate，拒绝拉票请求，告知对方自己未准备好</li></ul></li><li>最后如果请求拉票节点的 term 小于当前节点的 ledgerEndTerm，也拒绝</li><li>如果通过上面所有的过滤，则投票给请求拉票的节点：设置自己投票的 Leader，并返回投票。</li></ul><h2 id="_4-源码解析" tabindex="-1"><a class="header-anchor" href="#_4-源码解析" aria-hidden="true">#</a> 4. 源码解析</h2><h3 id="_4-1-状态维护" tabindex="-1"><a class="header-anchor" href="#_4-1-状态维护" aria-hidden="true">#</a> 4.1 状态维护</h3><h3 id="_4-2-maintainasfollower" tabindex="-1"><a class="header-anchor" href="#_4-2-maintainasfollower" aria-hidden="true">#</a> 4.2 maintainAsFollower</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">maintainAsFollower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 距离上次收到心跳是否超过 2 个心跳周期。在不加锁的情况下判断，减少加锁次数</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DLedgerUtils</span><span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span>lastLeaderHeartBeatTime<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">*</span> heartBeatTimeIntervalMs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 超过 maxHeartBeatLeak(3) 个心跳周期没有收到心跳包，则切换成 Candidate</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">isFollower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token class-name">DLedgerUtils</span><span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span>lastLeaderHeartBeatTime<span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxHeartBeatLeak <span class="token operator">*</span> heartBeatTimeIntervalMs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[{}][HeartBeatTimeOut] lastLeaderHeartBeatTime: {} heartBeatTimeIntervalMs: {} lastLeader={}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Timestamp</span><span class="token punctuation">(</span>lastLeaderHeartBeatTime<span class="token punctuation">)</span><span class="token punctuation">,</span> heartBeatTimeIntervalMs<span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-maintainasleader" tabindex="-1"><a class="header-anchor" href="#_4-3-maintainasleader" aria-hidden="true">#</a> 4.3 maintainAsLeader</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">maintainAsLeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 距离上次发送心跳超过 1 个心跳周期（2s），发送心跳请求</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DLedgerUtils</span><span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span>lastSendHeartBeatTime<span class="token punctuation">)</span> <span class="token operator">&gt;</span> heartBeatTimeIntervalMs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> term<span class="token punctuation">;</span>
        <span class="token class-name">String</span> leaderId<span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>memberState<span class="token punctuation">.</span><span class="token function">isLeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//stop sending</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            term <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            leaderId <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 记录本次发送心跳时间戳</span>
            lastSendHeartBeatTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 向所有从节点发送心跳</span>
        <span class="token function">sendHeartbeats</span><span class="token punctuation">(</span>term<span class="token punctuation">,</span> leaderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-maintainascandidate" tabindex="-1"><a class="header-anchor" href="#_4-3-maintainascandidate" aria-hidden="true">#</a> 4.3 maintainAsCandidate</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">maintainAsCandidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//for candidate</span>
    <span class="token comment">// 未到下一次拉票时间，直接返回</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> nextTimeToRequestVote <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>needIncreaseTermImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 投票轮次</span>
    <span class="token keyword">long</span> term<span class="token punctuation">;</span>
    <span class="token comment">// 日志末尾 Term</span>
    <span class="token keyword">long</span> ledgerEndTerm<span class="token punctuation">;</span>
    <span class="token comment">// 当前 Log 最大 index，即下一条 Log 的起始 index</span>
    <span class="token keyword">long</span> ledgerEndIndex<span class="token punctuation">;</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>memberState<span class="token punctuation">.</span><span class="token function">isCandidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 如果上一次投票结果是等待下一轮投票，或应立即发起投票</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastParseResult <span class="token operator">==</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_VOTE_NEXT</span> <span class="token operator">||</span> needIncreaseTermImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 获取新投票轮次，准备发起新一轮投票</span>
            <span class="token keyword">long</span> prevTerm <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            term <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">nextTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}_[INCREASE_TERM] from {} to {}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> prevTerm<span class="token punctuation">,</span> term<span class="token punctuation">)</span><span class="token punctuation">;</span>
            lastParseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_REVOTE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 维持当前投票轮次</span>
            term <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ledgerEndIndex <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ledgerEndTerm <span class="token operator">=</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 如果需要立即发起拉票</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>needIncreaseTermImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置下一次拉票时间</span>
        nextTimeToRequestVote <span class="token operator">=</span> <span class="token function">getNextTimeToRequestVote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置该标志位为 false</span>
        needIncreaseTermImmediately <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 向其他节点发起拉票请求</span>
    <span class="token keyword">long</span> startVoteTimeMs <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">&lt;</span><span class="token class-name">VoteResponse</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> quorumVoteResponses <span class="token operator">=</span> <span class="token function">voteForQuorumResponses</span><span class="token punctuation">(</span>term<span class="token punctuation">,</span> ledgerEndTerm<span class="token punctuation">,</span> ledgerEndIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 已知的最大投票轮次</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> knownMaxTermInGroup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 所有投票数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> allNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 有效投票数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> validNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 赞成投票数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> acceptedNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 未准备好投票。如果对端节点的投票轮次小于发起投票的轮次，则认为我对端未准备好，对端节点会用本节点的轮次进入 Candidate 状态</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> notReadyTermNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 发起投票节点的投票轮次小于对端节点的个数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> biggerLedgerNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 是否已经存在 Leader</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicBoolean</span> alreadyHasLeader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicBoolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 等待所有响应结果</span>
    <span class="token class-name">CountDownLatch</span> voteLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VoteResponse</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">:</span> quorumVoteResponses<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        future<span class="token punctuation">.</span><span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span> x<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[{}][GetVoteResponse] {}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getVoteResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">UNKNOWN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 有效票 + 1</span>
                    validNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 统计投票结果</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>knownMaxTermInGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getVoteResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">case</span> <span class="token constant">ACCEPT</span><span class="token operator">:</span>
                            <span class="token comment">// 赞成票 + 1</span>
                            acceptedNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_ALREADY_VOTED</span><span class="token operator">:</span>
                            <span class="token comment">// 拒绝，已经投给其他节点</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_TAKING_LEADERSHIP</span><span class="token operator">:</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_ALREADY_HAS_LEADER</span><span class="token operator">:</span>
                            <span class="token comment">// 拒绝，已经存在 Leader 节点</span>
                            alreadyHasLeader<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_TERM_SMALL_THAN_LEDGER</span><span class="token operator">:</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_EXPIRED_VOTE_TERM</span><span class="token operator">:</span>
                            <span class="token comment">// 拒绝，当前投票轮次小于 Leader，更新自身投票轮次</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> knownMaxTermInGroup<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                knownMaxTermInGroup<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_EXPIRED_LEDGER_TERM</span><span class="token operator">:</span>
                            <span class="token comment">// 拒绝，当前 ledgerTerm 小于对端 ledgerTerm</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_SMALL_LEDGER_END_INDEX</span><span class="token operator">:</span>
                            <span class="token comment">// 拒绝，当前 ledgerEndIndex 小于对端 ledgerEndIndex</span>
                            biggerLedgerNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">case</span> <span class="token constant">REJECT_TERM_NOT_READY</span><span class="token operator">:</span>
                            <span class="token comment">// 拒绝，对端投票轮次小于当前轮次，即对端未准备好。此时对端节点使用当前投票轮次进入 Candidate 状态</span>
                            notReadyTermNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">default</span><span class="token operator">:</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>

                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 已经有 Leader / 收到过半赞成，结束等待</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>alreadyHasLeader<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>acceptedNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>acceptedNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> notReadyTermNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    voteLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;vote response failed&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果所有对端节点都返回响应，结束等待</span>
                allNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>allNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">peerSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    voteLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token comment">// 同步等待所有节点响应</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        voteLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token number">2000</span> <span class="token operator">+</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>maxVoteIntervalMs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    lastVoteCost <span class="token operator">=</span> <span class="token class-name">DLedgerUtils</span><span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span>startVoteTimeMs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span> parseResult<span class="token punctuation">;</span>
    <span class="token comment">// 根据投票结果进行仲裁，驱动状态机</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>knownMaxTermInGroup<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> term<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 对端 term 大于自身 term，使用对端 term 进入 Candidate 状态</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_VOTE_NEXT</span><span class="token punctuation">;</span>
        nextTimeToRequestVote <span class="token operator">=</span> <span class="token function">getNextTimeToRequestVote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>knownMaxTermInGroup<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>alreadyHasLeader<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 已有 Leader，保持 Candidate 状态，待收到 Leader 心跳请求后变为 Follower</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_REVOTE</span><span class="token punctuation">;</span>
        <span class="token comment">// 重置下次拉票计时器，添加心跳最大超时时间。表示：等待在指定时间内收到 Leader 的心跳，降为 Follower。</span>
        nextTimeToRequestVote <span class="token operator">=</span> <span class="token function">getNextTimeToRequestVote</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> heartBeatTimeIntervalMs <span class="token operator">*</span> maxHeartBeatLeak<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>validNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 有效票未超过半数，重置下次拉票计时器，等待重新投票。不增加投票轮次</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_REVOTE</span><span class="token punctuation">;</span>
        nextTimeToRequestVote <span class="token operator">=</span> <span class="token function">getNextTimeToRequestVote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>validNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> biggerLedgerNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_REVOTE</span><span class="token punctuation">;</span>
        nextTimeToRequestVote <span class="token operator">=</span> <span class="token function">getNextTimeToRequestVote</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> maxVoteIntervalMs<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>acceptedNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 有效票超过半数，成为 Leader 节点</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">PASSED</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>acceptedNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> notReadyTermNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 有效票 + 未准备好投票 超过半数，立即重新拉票</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">REVOTE_IMMEDIATELY</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 赞成票 + 对端 ledgerEndIndex 超过半数，重置计时器，继续本轮选举</span>
        parseResult <span class="token operator">=</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">WAIT_TO_VOTE_NEXT</span><span class="token punctuation">;</span>
        nextTimeToRequestVote <span class="token operator">=</span> <span class="token function">getNextTimeToRequestVote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    lastParseResult <span class="token operator">=</span> parseResult<span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] [PARSE_VOTE_RESULT] cost={} term={} memberNum={} allNum={} acceptedNum={} notReadyTermNum={} biggerLedgerNum={} alreadyHasLeader={} maxTerm={} result={}&quot;</span><span class="token punctuation">,</span>
        memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastVoteCost<span class="token punctuation">,</span> term<span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">peerSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> allNum<span class="token punctuation">,</span> acceptedNum<span class="token punctuation">,</span> notReadyTermNum<span class="token punctuation">,</span> biggerLedgerNum<span class="token punctuation">,</span> alreadyHasLeader<span class="token punctuation">,</span> knownMaxTermInGroup<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parseResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>parseResult <span class="token operator">==</span> <span class="token class-name">VoteResponse<span class="token punctuation">.</span>ParseResult</span><span class="token punctuation">.</span><span class="token constant">PASSED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 有效票超过半数的情况，切换成 Leader</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] [VOTE_RESULT] has been elected to be the leader in term {}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> term<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">changeRoleToLeader</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-心跳请求" tabindex="-1"><a class="header-anchor" href="#_4-4-心跳请求" aria-hidden="true">#</a> 4.4 心跳请求</h3><h4 id="_4-4-1-sendheartbeats" tabindex="-1"><a class="header-anchor" href="#_4-4-1-sendheartbeats" aria-hidden="true">#</a> 4.4.1 sendHeartbeats</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token doc-comment comment">/**
 * Leader 节点向 Follower 节点发送心跳包，等待所有节点的心跳响应，然后根据响应的节点数量进行结果仲裁。
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendHeartbeats</span><span class="token punctuation">(</span><span class="token keyword">long</span> term<span class="token punctuation">,</span> <span class="token class-name">String</span> leaderId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 集群内节点个数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> allNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 收到成功响应的节点个数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> succNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 收到对端未准备好的响应的节点个数</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> notReadyNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 当前集群节点维护的最大投票轮次</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> maxTerm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 是否存在 Leader 节点不一致</span>
    <span class="token keyword">final</span> <span class="token class-name">AtomicBoolean</span> inconsistLeader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicBoolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// latch，用于等待异步请求结果</span>
    <span class="token keyword">final</span> <span class="token class-name">CountDownLatch</span> beatLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 本次心跳包开始发送的时间戳</span>
    <span class="token keyword">long</span> startHeartbeatTimeMs <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 遍历集群中所有节点，异步发送心跳</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> id <span class="token operator">:</span> memberState<span class="token punctuation">.</span><span class="token function">getPeerMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 构造心跳包</span>
        <span class="token class-name">HeartBeatRequest</span> heartBeatRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HeartBeatRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        heartBeatRequest<span class="token punctuation">.</span><span class="token function">setGroup</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        heartBeatRequest<span class="token punctuation">.</span><span class="token function">setLocalId</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        heartBeatRequest<span class="token punctuation">.</span><span class="token function">setRemoteId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        heartBeatRequest<span class="token punctuation">.</span><span class="token function">setLeaderId</span><span class="token punctuation">(</span>leaderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        heartBeatRequest<span class="token punctuation">.</span><span class="token function">setTerm</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 异步发送心跳</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HeartBeatResponse</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> dLedgerRpcService<span class="token punctuation">.</span><span class="token function">heartBeat</span><span class="token punctuation">(</span>heartBeatRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        future<span class="token punctuation">.</span><span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HeartBeatResponse</span> x<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 心跳响应回调，统计响应结果</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    memberState<span class="token punctuation">.</span><span class="token function">getPeersLiveTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 成功响应</span>
                    <span class="token keyword">case</span> <span class="token constant">SUCCESS</span><span class="token operator">:</span>
                        succNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token comment">// Leader 节点投票轮次小于 Follower 节点</span>
                    <span class="token keyword">case</span> <span class="token constant">EXPIRED_TERM</span><span class="token operator">:</span>
                        maxTerm<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token comment">// Follower 节点已经有新的 Leader</span>
                    <span class="token keyword">case</span> <span class="token constant">INCONSISTENT_LEADER</span><span class="token operator">:</span>
                        inconsistLeader<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token comment">// Follower 未准备好</span>
                    <span class="token keyword">case</span> <span class="token constant">TERM_NOT_READY</span><span class="token operator">:</span>
                        notReadyNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">NETWORK_ERROR</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    memberState<span class="token punctuation">.</span><span class="token function">getPeersLiveTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    memberState<span class="token punctuation">.</span><span class="token function">getPeersLiveTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 成功响应的 Follower 节点超过半数，唤醒心跳线程</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>succNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>succNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> notReadyNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    beatLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;heartbeat response failed&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                allNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 所有 Follower 都响应（但成功的没有超过半数），也唤醒心跳线程</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>allNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">peerSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    beatLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 等待心跳结果，超过半数成功则继续</span>
    beatLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span>heartBeatTimeIntervalMs<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 仲裁心跳响应结果</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>succNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 半数以上 Follower 节点成功响应，更新上次成功心跳时间戳</span>
        lastSuccHeartBeatTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] Parse heartbeat responses in cost={} term={} allNum={} succNum={} notReadyNum={} inconsistLeader={} maxTerm={} peerSize={} lastSuccHeartBeatTime={}&quot;</span><span class="token punctuation">,</span>
            memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DLedgerUtils</span><span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span>startHeartbeatTimeMs<span class="token punctuation">)</span><span class="token punctuation">,</span> term<span class="token punctuation">,</span> allNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> succNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> notReadyNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> inconsistLeader<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> maxTerm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">peerSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Timestamp</span><span class="token punctuation">(</span>lastSuccHeartBeatTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">isQuorum</span><span class="token punctuation">(</span>succNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> notReadyNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// （成功 + 未准备）超过半数，立即发送下一次心跳</span>
            lastSendHeartBeatTime <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>maxTerm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> term<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Follower 投票轮次比 Leader 大，Leader 切换成 Candidate 并使用从节点的轮次</span>
            <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>maxTerm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>inconsistLeader<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Follower 有其他 Leader，该 Leader 节点切换成 Candidate</span>
            <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DLedgerUtils</span><span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span>lastSuccHeartBeatTime<span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxHeartBeatLeak <span class="token operator">*</span> heartBeatTimeIntervalMs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 超过 maxHeartBeatLeak 个心跳周期（6s）没有半数心跳响应成功，切换成 Candidate</span>
            <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-2-handleheartbeat" tabindex="-1"><a class="header-anchor" href="#_4-4-2-handleheartbeat" aria-hidden="true">#</a> 4.4.2 handleHeartbeat</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token doc-comment comment">/**
 * Follower 收到 Leader 心跳请求，处理心跳请求后响应
 *
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HeartBeatResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleHeartBeat</span><span class="token punctuation">(</span><span class="token class-name">HeartBeatRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>memberState<span class="token punctuation">.</span><span class="token function">isPeerMember</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[BUG] [HandleHeartBeat] remoteId={} is an unknown member&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">UNKNOWN_MEMBER</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[BUG] [HandleHeartBeat] selfId={} but remoteId={}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">UNEXPECTED_MEMBER</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 发送请求的节点（Leader）轮次小于当前节点（Follower），返回 EXPIRED_TERM，告诉对方轮次已经过期，需要重新选举</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">EXPIRED_TERM</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 轮次相同，判断请求的节点是否是当前的 Leader</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果请求的节点是当前的 Leader，更新上次收到 Leader 心跳的时间戳，返回成功</span>
            lastLeaderHeartBeatTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 处理异常情况，通常情况下上面已经返回。需要加锁以保证线程安全</span>
    <span class="token comment">//abnormal case</span>
    <span class="token comment">//hold the lock to get the latest term and leaderId</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Leader 节点轮次小于 Follower，返回 EXPIRED_TERM，告诉对方轮次已经过期，需要重新选举</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">EXPIRED_TERM</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 轮次相同，判断请求的节点是否是当前的 Leader</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果当前节点还没有 Leader，切换角色成为 Follower，设置 Leader 节点 Id，返回成功</span>
                <span class="token function">changeRoleToFollower</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果请求的节点是当前的 Leader，更新上次收到 Leader 心跳的时间戳，返回成功</span>
                lastLeaderHeartBeatTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果请求的节点不是当前的 Leader，返回 INCONSISTENT_LEADER，告诉对方 Leader 节点不一致，对方会切换成 Candidate，重新选举</span>
                <span class="token comment">//this should not happen, but if happened</span>
                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[{}][BUG] currTerm {} has leader {}, but received leader {}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">INCONSISTENT_LEADER</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果请求的轮次大于当前轮次，认为本节点未准备好，进入 Candidate 状态，立即发起一轮投票，返回 TERM_NOT_READY</span>
            <span class="token comment">//To make it simple, for larger term, do not change to follower immediately</span>
            <span class="token comment">//first change to candidate, and notify the state-maintainer thread</span>
            <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            needIncreaseTermImmediately <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">//TOOD notify</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeartBeatResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">DLedgerResponseCode</span><span class="token punctuation">.</span><span class="token constant">TERM_NOT_READY</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-拉票请求" tabindex="-1"><a class="header-anchor" href="#_4-5-拉票请求" aria-hidden="true">#</a> 4.5 拉票请求</h3><h4 id="_4-5-1-voteforquorumresponses" tabindex="-1"><a class="header-anchor" href="#_4-5-1-voteforquorumresponses" aria-hidden="true">#</a> 4.5.1 voteForQuorumResponses</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token doc-comment comment">/**
 * 向其他节点发起投票请求（拉票），等待各个节点响应
 *
 * <span class="token keyword">@param</span> <span class="token parameter">term</span> 当前轮次
 * <span class="token keyword">@param</span> <span class="token parameter">ledgerEndTerm</span> 最新日志的 term
 * <span class="token keyword">@param</span> <span class="token parameter">ledgerEndIndex</span> 最大日志条目 index
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">&lt;</span><span class="token class-name">VoteResponse</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">voteForQuorumResponses</span><span class="token punctuation">(</span><span class="token keyword">long</span> term<span class="token punctuation">,</span> <span class="token keyword">long</span> ledgerEndTerm<span class="token punctuation">,</span>
    <span class="token keyword">long</span> ledgerEndIndex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">&lt;</span><span class="token class-name">VoteResponse</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> responses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 遍历集群内所有节点</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> id <span class="token operator">:</span> memberState<span class="token punctuation">.</span><span class="token function">getPeerMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 构建投票请求</span>
        <span class="token class-name">VoteRequest</span> voteRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VoteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        voteRequest<span class="token punctuation">.</span><span class="token function">setGroup</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        voteRequest<span class="token punctuation">.</span><span class="token function">setLedgerEndIndex</span><span class="token punctuation">(</span>ledgerEndIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        voteRequest<span class="token punctuation">.</span><span class="token function">setLedgerEndTerm</span><span class="token punctuation">(</span>ledgerEndTerm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        voteRequest<span class="token punctuation">.</span><span class="token function">setLeaderId</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        voteRequest<span class="token punctuation">.</span><span class="token function">setTerm</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span><span class="token punctuation">;</span>
        voteRequest<span class="token punctuation">.</span><span class="token function">setRemoteId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VoteResponse</span><span class="token punctuation">&gt;</span></span> voteResponse<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 投票给自己</span>
            voteResponse <span class="token operator">=</span> <span class="token function">handleVote</span><span class="token punctuation">(</span>voteRequest<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 发送投票请求到其他节点</span>
            <span class="token comment">//async</span>
            voteResponse <span class="token operator">=</span> dLedgerRpcService<span class="token punctuation">.</span><span class="token function">vote</span><span class="token punctuation">(</span>voteRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        responses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>voteResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> responses<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-2-handlevote" tabindex="-1"><a class="header-anchor" href="#_4-5-2-handlevote" aria-hidden="true">#</a> 4.5.2 handleVote</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DLedgerLeaderElector.java</span>
<span class="token doc-comment comment">/**
 * 处理收到的拉票请求
 *
 * <span class="token keyword">@param</span> <span class="token parameter">request</span> 拉票请求
 * <span class="token keyword">@param</span> <span class="token parameter">self</span> 是否自身发送的投票请求
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VoteResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleVote</span><span class="token punctuation">(</span><span class="token class-name">VoteRequest</span> request<span class="token punctuation">,</span> <span class="token keyword">boolean</span> self<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 由于一个节点可能同时收到多个其他节点的拉票请求，所以需要加锁。锁定状态机对象。</span>
    <span class="token comment">//hold the lock to get the latest term, leaderId, ledgerEndIndex</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>memberState<span class="token punctuation">.</span><span class="token function">isPeerMember</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[BUG] [HandleVote] remoteId={} is an unknown member&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_UNKNOWN_LEADER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>self <span class="token operator">&amp;&amp;</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[BUG] [HandleVote] selfId={} but remoteId={}&quot;</span><span class="token punctuation">,</span> memberState<span class="token punctuation">.</span><span class="token function">getSelfId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_UNEXPECTED_LEADER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 根据当前节点的 ledgerEndTerm 进行仲裁</span>
        <span class="token comment">// 如果发起拉票节点的 ledgerEndTerm 小于当前节点的 ledgerEndTerm，说明发起拉票节点的日志复制进度比当前节点低，无法成为 Leader，拒绝</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_EXPIRED_LEDGER_TERM</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 如果 ledgerEndTerm 相等，但是发起拉票节点的 ledgerEndIndex 小于当前节点的 ledgerEndIndex，说明发起拉票节点的日志复制进度比当前节点低，无法成为 Leader，拒绝</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span><span class="token function">getLedgerEndIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_SMALL_LEDGER_END_INDEX</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 拉票请求的 term 小于当前 term，拒绝投票</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_EXPIRED_VOTE_TERM</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 拉票请求的 term 等于当前 term，处理拉票请求</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果当前节点未投票，继续下面的逻辑</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currVoteFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//let it go</span>
            <span class="token comment">// 如果当前节点已投票给请求节点，也继续下面的逻辑</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currVoteFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//repeat just let it go</span>
            <span class="token comment">// 如果当前节点已投票给其他节点，拒绝投票</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果当前节点已存在 Leader 节点，拒绝并告知对方已有的 Leader 节点</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_ALREADY_HAS_LEADER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 如果当前节点没有 Leader 节点，拒绝</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_ALREADY_VOTED</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token comment">// 拉票请求的 term 大于当前 term，当前节点降级为 Candidate，拒绝拉票请求，告知对方节点自己未准备好</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 使用发起拉票请求的 term 进入 Candidate 状态</span>
            <span class="token comment">//stepped down by larger term</span>
            <span class="token function">changeRoleToCandidate</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            needIncreaseTermImmediately <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">//only can handleVote when the term is consistent</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_TERM_NOT_READY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 如果发起拉票请求节点的 term 小于当前节点的 ledgerEndTerm，拒绝投票</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_TERM_SMALL_THAN_LEDGER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>self <span class="token operator">&amp;&amp;</span> <span class="token function">isTakingLeadership</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> memberState<span class="token punctuation">.</span><span class="token function">getLedgerEndIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> request<span class="token punctuation">.</span><span class="token function">getLedgerEndIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">REJECT_TAKING_LEADERSHIP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 投票给发起拉票请求的节点</span>
        memberState<span class="token punctuation">.</span><span class="token function">setCurrVoteFor</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getLeaderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VoteResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">term</span><span class="token punctuation">(</span>memberState<span class="token punctuation">.</span><span class="token function">currTerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">voteResult</span><span class="token punctuation">(</span><span class="token class-name">VoteResponse</span><span class="token punctuation">.</span><span class="token constant">RESULT</span><span class="token punctuation">.</span><span class="token constant">ACCEPT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,53),v={href:"https://github.com/openmessaging/dledger/wiki",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,"RocketMQ 技术内幕 第2版",-1),f={href:"http://thesecretlivesofdata.com/raft/",target:"_blank",rel:"noopener noreferrer"},g=n("hr",null,null,-1),w=n("p",null,"欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！",-1),h=n("figure",null,[n("img",{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),L=n("hr",{class:"footnotes-sep"},null,-1),y={class:"footnotes"},T={class:"footnotes-list"},R={id:"footnote1",class:"footnote-item"},E={href:"https://github.com/apache/rocketmq/issues/2278",target:"_blank",rel:"noopener noreferrer"},S=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function _(I,q){const t=o("ExternalLinkIcon"),p=o("Mermaid");return l(),u("div",null,[n("p",null,[s("原文地址："),n("a",k,[s("http://hscarb.github.io/rocketmq/20250204-rocketmq-dledger-leader-election.html"),a(t)])]),r,a(p,{id:"mermaid-30",code:"eJx9UcFOwkAQvfMVezbh4pGDF40n/0A8NGlFEmwTbPQKMUohAiGxVLHEYCQxamqjtW1SCz/TnW7/wmUXKlVkT7sz89689/ZEFVRppyyUqsJx/nQzh+jZ3zhA+fwW2lUqFeVMquZYdfFirW1BFssihRYQ8YaR34LXEVy7WLPx9Jx4H2C4ieEUZeJekGkjqTUjf0LvtMy4ZEWVULVcOlKRcvizZ9aaHc6E9iRBpPvAbIKucd50JGm049Ai1ohS4tsnVpdkkTFzvXP0spECwt1e3LHhzklebqIgAPN+hR6OTFdha0DnKDKp1X+pgOE4Dhy4qicPl/jtC5t2FLZXaEnjYnI4P02u4+GJgR8HoNvQ0uMxt5EdXqe9KIPWn8fuvdOcFqaXZGatpdyphb8/BObzP8pYGt0e+fSgb0d+jYQWB2YtfwOEthKF"}),d,a(p,{id:"mermaid-318",code:"eJzVVl1P2zAUfe+vyGPYFH5AhSoNqMYDbAjQ3m+d28aS43j2LRraxm+fnUJsN04KWTVpkfLh43OuneuT6zABxlxy2GioZ5k9Sq6REW9k9nA+a5GWkl1eY7lBfSE4SrrVDTWsEVcgS4E6+9kS3XF2xiWhXgPDxaJDP1Yt8ZNSKMt8d1tK0k93+H2Lhk7mWQQa1UiD+/LPSLk9HYej8dIQSytvkKAEgvz1wYs9kpZeI5SoTcXVgwZp1qjzPuTDpfqCwL8TKZ2YzG8NYe4ufvBdK/0eVwiazhEo7568MIDS6tutELm79JIfgUNiU1mxqfaWPIAOpCh23eEM1VPWezPBXuKo7mhDwoSPZMxWh7P1+GYnOZus3u8hNc096q99c6fYPepHzjDKAqwMaWD0koQB5RckeorlKaZjRF9tUWO9sjgBofNb1/CM8kVKjbaU10Cu1eP4V+iIHuqx27S4/KDu6AHW4+8MuRS25DdeEaFegz+QbS3SzeeeVVhuBZbLuMdL1qa+AGGr2jz7qtyuAuK5zcUNsIpL3HU+dwK/+Bo33Fizhuw8bJwct8K9s5z+j1vZ8Yr4njgA/+EmOrB9FsWvxfjfyjzjtRJY2y6TijQSYlAbVJrTU69+69AH5GO6qEyFM98rE3G5Gplkgv2hKAZGnP0BwPZnaw=="}),m,n("ul",null,[n("li",null,[n("a",v,[s("DLedger Wiki"),a(t)])]),b]),n("ul",null,[n("li",null,[n("a",f,[s("The Secret Lives of Data - Raft"),a(t)])])]),g,w,h,L,n("section",y,[n("ol",T,[n("li",R,[n("p",null,[n("a",E,[s("https://github.com/apache/rocketmq/issues/2278"),a(t)]),s(),S])])])])])}const D=c(i,[["render",_],["__file","20250204-rocketmq-dledger-leader-election.html.vue"]]);export{D as default};
