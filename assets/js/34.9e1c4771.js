(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{622:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("原文地址："),s("a",{attrs:{href:"http://hscarb.github.io/rocketmq/20220412-rocketmq-4.9.3-performance-improvement.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://hscarb.github.io/rocketmq/20220412-rocketmq-4.9.3-performance-improvement.md"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"rocketmq-4-9-3-版本-性能优化-源码剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq-4-9-3-版本-性能优化-源码剖析"}},[t._v("#")]),t._v(" RocketMQ 4.9.3 版本 性能优化 源码剖析")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#rocketmq-4-9-3-版本-性能优化-源码剖析"}},[t._v("RocketMQ 4.9.3 版本 性能优化 源码剖析")]),s("ul",[s("li",[s("a",{attrs:{href:"#概述"}},[t._v("概述")])]),s("li",[s("a",{attrs:{href:"#性能优化"}},[t._v("性能优化")]),s("ul",[s("li",[s("a",{attrs:{href:"#a-移除-messageext-中的反向-dns-查找"}},[t._v("A. 移除 MessageExt 中的反向 DNS 查找")])]),s("li",[s("a",{attrs:{href:"#b-1-优化-rocketmq-通信协议-header-解码性能"}},[t._v("B.1. 优化 RocketMQ 通信协议 Header 解码性能")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#优化方案"}},[t._v("优化方案")])])])]),s("li",[s("a",{attrs:{href:"#b-2-提高编解码性能"}},[t._v("B.2. 提高编解码性能")]),s("ul",[s("li",[s("a",{attrs:{href:"#改动背景"}},[t._v("改动背景")])]),s("li",[s("a",{attrs:{href:"#优化方法"}},[t._v("优化方法")])])])]),s("li",[s("a",{attrs:{href:"#c-缓存-parsechannelremoteaddr-方法的结果"}},[t._v("C. 缓存 parseChannelRemoteAddr() 方法的结果")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#具体优化方法"}},[t._v("具体优化方法")])])])]),s("li",[s("a",{attrs:{href:"#d-提升-createuniqid-的性能"}},[t._v("D. 提升 createUniqID() 的性能")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#优化方法"}},[t._v("优化方法")])])])]),s("li",[s("a",{attrs:{href:"#e-当没有用到-namespace-时-避免其被多次调用"}},[t._v("E. 当没有用到 namespace 时，避免其被多次调用")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#优化方法"}},[t._v("优化方法")])])])]),s("li",[s("a",{attrs:{href:"#f-去除-topic-group-名称的正则匹配检查"}},[t._v("F. 去除 Topic/Group 名称的正则匹配检查")])]),s("li",[s("a",{attrs:{href:"#g-支持发送-batch-消息时支持不同的-topic-queue"}},[t._v("G. 支持发送 batch 消息时支持不同的 Topic/Queue")])]),s("li",[s("a",{attrs:{href:"#h-避免无谓的-stringbuilder-扩容"}},[t._v("H. 避免无谓的 StringBuilder 扩容")])]),s("li",[s("a",{attrs:{href:"#i-避免无谓的-stringbuffer-扩容和-string-格式化"}},[t._v("I. 避免无谓的 StringBuffer 扩容和 String 格式化")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#优化方法"}},[t._v("优化方法")])])])]),s("li",[s("a",{attrs:{href:"#j-在写-consumequeue-和-从节点的-commitlog-时-使用-mmap-而不是-filechannel-提升消息消费-tps"}},[t._v("J. 在写 ConsumeQueue 和 从节点的 CommitLog 时，使用 MMap 而不是 FileChannel，提升消息消费 TPS")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#优化方法"}},[t._v("优化方法")])])])]),s("li",[s("a",{attrs:{href:"#k-将-notifymessagearriving-的调用从-reputmessageservice-线程移到-pullrequestholdservice-线程"}},[t._v("K. 将 notifyMessageArriving() 的调用从 ReputMessageService 线程移到 PullRequestHoldService 线程")]),s("ul",[s("li",[s("a",{attrs:{href:"#寻找优化点"}},[t._v("寻找优化点")])]),s("li",[s("a",{attrs:{href:"#优化方案-1"}},[t._v("优化方案 1")])]),s("li",[s("a",{attrs:{href:"#优化方案-2"}},[t._v("优化方案 2")])])])])])]),s("li",[s("a",{attrs:{href:"#小结"}},[t._v("小结")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("RocketMQ "),s("a",{attrs:{href:"https://github.com/apache/rocketmq/releases/tag/rocketmq-all-4.9.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("4.9.1 版本"),s("OutboundLink")],1),t._v(" 针对 Broker 做了一系列性能优化，提升了消息发送的 TPS。"),s("a",{attrs:{href:"https://github.com/HScarb/knowledge/blob/master/rocketmq/20220131-rocketmq-4.9.1-performance-improvement.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("前文曾就 4.9.1 版本的优化做了深入分析"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("在 2022 年的 2 月底，RocketMQ "),s("a",{attrs:{href:"https://github.com/apache/rocketmq/releases/tag/rocketmq-all-4.9.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("4.9.3 版本"),s("OutboundLink")],1),t._v(" 发布，其对 Broker 做了更进一步的性能优化，本次优化中也包含了生产和消费性能的提升。")]),t._v(" "),s("p",[t._v("本文将会详解 4.9.3 版本中的性能优化点。在 4.9.3 版本中对延迟消息的优化已经在"),s("a",{attrs:{href:"https://github.com/HScarb/knowledge/blob/master/rocketmq/20220320-rocketmq-scheduled-message-4.9.3-improve.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("另一篇文章"),s("OutboundLink")],1),t._v("中详解。")]),t._v(" "),s("p",[t._v("本次和上次的性能优化主要由快手的"),s("a",{attrs:{href:"https://github.com/areyouok",target:"_blank",rel:"noopener noreferrer"}},[t._v("黄理"),s("OutboundLink")],1),t._v("老师提交，在 "),s("a",{attrs:{href:"https://github.com/apache/rocketmq/issues/3585",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISSUE#3585"),s("OutboundLink")],1),t._v(" 中集中记录。先来看一下本次性能优化的所有优化项")]),t._v(" "),s("blockquote",[s("p",[t._v("We have some performance improvements based on 4.9.2")]),t._v(" "),s("ol",[s("li",[t._v("[Part A] eliminate reverse DNS lookup in MessageExt")]),t._v(" "),s("li",[t._v("[Part B] Improve header encode/decode performance")]),t._v(" "),s("li",[t._v("[Part B] Improve RocketMQSerializable performance with zero-copy")]),t._v(" "),s("li",[t._v("[Part C] cache result for parseChannelRemoteAddr()")]),t._v(" "),s("li",[t._v("[Part D] improve performance of createUniqID()")]),t._v(" "),s("li",[t._v("[Part E] eliminate duplicated getNamespace() call when where is no namespace")]),t._v(" "),s("li",[t._v("[Part F] eliminate regex match in topic/group name check")]),t._v(" "),s("li",[t._v("[Part G] [Work in progress] support send batch message with different topic/queue")]),t._v(" "),s("li",[t._v("[Part H] eliminate StringBuilder auto resize in PullRequestHoldService.buildKey() when topic length is greater than 14, this method called twice for each message.")]),t._v(" "),s("li",[t._v("[Part I] Avoid unnecessary StringBuffer resizing and String Formatting")]),t._v(" "),s("li",[t._v("[Part J] Use mmap buffer instead of FileChannel when writing consume queue and slave commit log, which greatly speed up consume tps.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3659",target:"_blank",rel:"noopener noreferrer"}},[t._v("Part K"),s("OutboundLink")],1),t._v(" move execution of notifyMessageArriving() from ReputMessageService thread to PullRequestHoldService thread.")])]),t._v(" "),s("p",[t._v("These commits almost eliminate bad performance methods in the cpu flame graph in producer side.")])]),t._v(" "),s("p",[t._v("下面来逐条剖析")]),t._v(" "),s("h2",{attrs:{id:"性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),s("p",[t._v("想要优化性能，首先需要找到 RocketMQ 的 Broker 在处理消息时性能损耗的点。使用火焰图可以清晰地看出当前耗时比较多的方法，从耗时较多的方法想办法入手优化，可以更大程度上提升性能。")]),t._v(" "),s("p",[t._v("具体的做法是开启 Broker 的火焰图采样，然后对其进行压测（同时生产和消费），然后观察其火焰图中方法的时间占用百分比，优化占用时间高且可以优化的地方。")]),t._v(" "),s("h3",{attrs:{id:"a-移除-messageext-中的反向-dns-查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-移除-messageext-中的反向-dns-查找"}},[t._v("#")]),t._v(" A. 移除 MessageExt 中的反向 DNS 查找")]),t._v(" "),s("blockquote",[s("p",[t._v("eliminate reverse DNS lookup in MessageExt")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3586",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3586"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112120431.png",alt:"image-20220411212011338"}})]),t._v(" "),s("p",[s("code",[t._v("inetAddress.getHostName()")]),t._v(" 方法中会有反向 DNS 查找，可能耗时较多。于是优化成没有反向 DNS 查找的 "),s("code",[t._v("getHostString()")]),t._v(" 方法")]),t._v(" "),s("p",[t._v("（"),s("code",[t._v("MessageExt#getBornHostNameString()")]),t._v(" 方法在一个异常流程中被调用，优化此方法其实对性能没有什么提升）")]),t._v(" "),s("h3",{attrs:{id:"b-1-优化-rocketmq-通信协议-header-解码性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-1-优化-rocketmq-通信协议-header-解码性能"}},[t._v("#")]),t._v(" B.1. 优化 RocketMQ 通信协议 Header 解码性能")]),t._v(" "),s("blockquote",[s("p",[t._v("[Part B] Improve header encode/decode performance")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3588",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3588"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("（该提交未合入 4.9.3 版本，将于 4.9.4 版本发布）")]),t._v(" "),s("blockquote",[s("p",[t._v("PartB 有两个提交，其实作用不同，但是由于第二个提交依赖第一个所以只能放到一起")])]),t._v(" "),s("h4",{attrs:{id:"寻找优化点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204151449934.png",alt:""}})]),t._v(" "),s("p",[t._v("RocketMQ 的通信协议定义了各种指令（消息发送、拉取等等）。其中 Header 是协议头，数据是序列化后的json。json 的每个 key 字段都是固定的，不同的通讯请求字段不一样，但是其中有一个 "),s("code",[t._v("extField")]),t._v(" 是完全自定义的，每个指令都不一样。所有指令当前共用了一个通用的解析方法 "),s("code",[t._v("RemotingCommand#decodeCommandCustomHeader")]),t._v("，基于反射来解析和设置消息 Header。")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SendMessageRequestHeaderV2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("310")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extFields"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"f"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"g"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1482158310125"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"d"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"e"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TopicTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TBW102"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"please_rename_unique_group_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"j"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"k"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"h"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"i"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TAGS\\u0001TagA\\u0002WAIT\\u0001true\\u0002"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"flag"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"language"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JAVA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"opaque"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("206")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面是一个发送消息的请求 Header。由于各种指令对应的 Header 的 "),s("code",[t._v("extField")]),t._v(" 不同，这个解析 Header 方法内部大量使用反射来设置属性，效率很低。而且这个解码方法应用广泛，在 RocketMQ 网络通信时都会用到（如发送消息、拉取消息），所以很有优化的必要。")]),t._v(" "),s("h4",{attrs:{id:"优化方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方案"}},[t._v("#")]),t._v(" 优化方案")]),t._v(" "),s("p",[t._v("优化的方案是尽量减少反射的使用，将常用的指令解码方法抽象出来。")]),t._v(" "),s("p",[t._v("这里引入了 "),s("code",[t._v("FastCodesHeader")]),t._v(" 接口，只要实现这个接口，解码时就走具体的实现类而不用反射。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204151255671.png",alt:""}})]),t._v(" "),s("p",[t._v("然后为生产消息和消费消息的协议单独实现解码方法，内部可以不用反射而是直接进行字段赋值，这样虽然繁琐但是执行速度最快。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SendMessageRequestHeaderV2.java")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingCommandException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndCheckNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndCheckNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndCheckNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndCheckNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ......")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"b-2-提高编解码性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-2-提高编解码性能"}},[t._v("#")]),t._v(" B.2. 提高编解码性能")]),t._v(" "),s("blockquote",[s("p",[t._v("[Part B] Improve RocketMQSerializable performance with zero-copy")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3588",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3588"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("（该提交未合入 4.9.3 版本，将于 4.9.4 版本发布）")]),t._v(" "),s("h4",{attrs:{id:"改动背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改动背景"}},[t._v("#")]),t._v(" 改动背景")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204151500752.png",alt:""}})]),t._v(" "),s("p",[t._v("RocketMQ 的协议 Header 序列化协议有俩")]),t._v(" "),s("ul",[s("li",[t._v("RemotingSerializable：内部用 fastjson 进行序列化反序列化，为当前版本使用的序列化协议。")]),t._v(" "),s("li",[t._v("RocketMQSerializable：RocketMQ 实现的序列化协议，性能对比 fastjson 没有决定性优势，当前默认没有使用。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RemotingCommand.java")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SerializeType")]),t._v(" serializeTypeConfigInThisServer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SerializeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JSON"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("headerEncode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeCustomHeaderToNet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SerializeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ROCKETMQ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" serializeTypeCurrentRPC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RocketMQSerializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rocketMQProtocolEncode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingSerializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"优化方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方法"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),s("p",[t._v("这个提交优化了 RocketMQSerializable 的性能，具体的方法是消除了 "),s("code",[t._v("RocketMQSerializable")]),t._v(" 中多余的拷贝和对象创建，使用 Netty 的 "),s("code",[t._v("ByteBuf")]),t._v(" 替换 Java 的 "),s("code",[t._v("ByteBuffer")]),t._v("，性能更高。")]),t._v(" "),s("ul",[s("li",[t._v("对于写字符串：Netty 的 "),s("code",[t._v("ByteBuf")]),t._v(" 有直接 put 字符串的方法 "),s("code",[t._v("writeCharSequence(CharSequence sequence, Charset charset)")]),t._v("，少一次内存拷贝，效率更高。")]),t._v(" "),s("li",[t._v("对于写 Byte：Netty 的 "),s("code",[t._v("writeByte(int value)")]),t._v(" 传入一个 "),s("code",[t._v("int")]),t._v("，Java 传入一个字节 "),s("code",[t._v("put(byte b)")]),t._v("。当前 CPU 都是 32 位、64 位的，对 int 处理更高效。")])]),t._v(" "),s("p",[t._v("（该改动要在 Producer 和 Consumer 设置使用 RocketMQ 序列化协议才能生效）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SERIALIZE_TYPE_PROPERTY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SerializeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ROCKETMQ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("hr"),t._v(" "),s("p",[t._v("提交说明上的 "),s("code",[t._v("zero-copy")]),t._v(" 说的不是操作系统层面上的零拷贝，而是对于 "),s("code",[t._v("ByteBuf")]),t._v(" 的零拷贝。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("NettyEncoder")]),t._v(" 中用 "),s("code",[t._v("fastEncodeHeader")]),t._v(" 替换原来的 "),s("code",[t._v("encodeHeader")]),t._v(" 方法，直接传入 "),s("code",[t._v("ByteBuf")]),t._v(" 进行操作，不需要用 Java 的 "),s("code",[t._v("ByteBuffer")]),t._v(" 中转一下，少了一次拷贝。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204151600260.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fastEncodeHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuf")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" bodySize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" beginIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writerIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// skip 8 bytes")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeLong")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" headerSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是 RocketMQ 序列化协议")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SerializeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ROCKETMQ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" serializeTypeCurrentRPC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("customHeader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("customHeader "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FastCodesHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeCustomHeaderToNet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 RocketMQ 序列化协议编码")]),t._v("\n        headerSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RocketMQSerializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rocketMQProtocolEncode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeCustomHeaderToNet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingSerializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        headerSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beginIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" headerSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bodySize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beginIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("markProtocolType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("headerSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serializeTypeCurrentRPC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("rocketMQProtocolEncode")]),t._v(" 中直接操作 "),s("code",[t._v("ByteBuf")]),t._v("，没有拷贝和新对象的创建。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rocketMQProtocolEncode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingCommand")]),t._v(" cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuf")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" beginIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writerIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int code(~32767)")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeShort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LanguageCode language")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeByte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLanguage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int version(~32767)")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeShort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int opaque")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOpaque")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int flag")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFlag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// String remark")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" remark "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRemark")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remark "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("remark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mapLenIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writerIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readCustomHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FastCodesHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FastCodesHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readCustomHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExtFields")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapLenIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writerIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mapLenIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writerIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" beginIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"c-缓存-parsechannelremoteaddr-方法的结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-缓存-parsechannelremoteaddr-方法的结果"}},[t._v("#")]),t._v(" C. 缓存 parseChannelRemoteAddr() 方法的结果")]),t._v(" "),s("blockquote",[s("p",[t._v("cache the result of parseChannelRemoteAddr()")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3589",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3589"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"寻找优化点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点-2"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112132137.png",alt:"image-20220411213226971"}})]),t._v(" "),s("p",[t._v("从火焰图中可以看到，"),s("code",[t._v("parseChannelRemoteAddr()")]),t._v(" 这个方法占用了 5% 左右的总耗时。")]),t._v(" "),s("p",[t._v("这个方法被客户端在发送消息时调用，每次发送消息都会调用到这个方法，这也是他占用如此高 CPU 耗时百分比的原因。")]),t._v(" "),s("p",[t._v("那么这个方法做了什么？Netty 的 Channel 相当于一个 HTTP 连接，这个方法试图从 Channel 中获取远端的地址。")]),t._v(" "),s("p",[t._v("从火焰图上看出，该方法的 "),s("code",[t._v("toString")]),t._v("占用大量时间，其中主要包含了复杂的 String 拼接和处理方法。")]),t._v(" "),s("p",[t._v("那么想要优化这个方法最直接的方式就是——缓存其结果，避免多次调用。")]),t._v(" "),s("h4",{attrs:{id:"具体优化方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体优化方法"}},[t._v("#")]),t._v(" 具体优化方法")]),t._v(" "),s("p",[t._v("Netty 提供了 "),s("code",[t._v("AttributeKey")]),t._v(" 这个类，用于将 HTTP 连接的状态保存在 Channel 上。"),s("code",[t._v("AttributeKey")]),t._v(" 相当于一个 Key-Value 对，用来存储状态。")]),t._v(" "),s("p",[t._v("要使用 "),s("code",[t._v("AttributeKey")]),t._v("，需要先初始化它的 Key，这样它就可以预先计算 Key 的 HashCode，查询该 Key 的时候效率就很高了。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AttributeKey")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" REMOTE_ADDR_KEY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AttributeKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RemoteAddr"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然后优化该方法，第一次调用该方法时尝试从 Channel 上获取属性"),s("code",[t._v("RemoteAddr")]),t._v("，如果获取不到，则调用原来的逻辑去获取并且缓存到该 "),s("code",[t._v("AttributeKey")]),t._v(" 中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112151000.png",alt:"image-20220411215152793"}})]),t._v(" "),s("p",[t._v("修改过后在火焰图上已经几乎看不到该方法的用时。")]),t._v(" "),s("h3",{attrs:{id:"d-提升-createuniqid-的性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#d-提升-createuniqid-的性能"}},[t._v("#")]),t._v(" D. 提升 createUniqID() 的性能")]),t._v(" "),s("blockquote",[s("p",[t._v("Improve performance of createUniqID().")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3590",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3590"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"寻找优化点-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点-3"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112227481.png",alt:"image-20220411222721408"}})]),t._v(" "),s("p",[s("code",[t._v("createUniqID()")]),t._v(" 这个方法用于创建消息的全局唯一 ID，在客户端每次发送消息时会调用，为每个消息创建全局唯一 ID。")]),t._v(" "),s("p",[t._v("RocketMQ 中包含两个消息 ID，分别为全局唯一 ID（UNIQUE_ID，消息发送时由客户端生产）和偏移量 ID（offsetMsgId，Broker 保存消息时由保存的偏移量生成），关于这两个 ID 的生成方法和使用可以看丁威老师的 "),s("a",{attrs:{href:"https://blog.csdn.net/prestigeding/article/details/104739950",target:"_blank",rel:"noopener noreferrer"}},[t._v("RocketMQ msgId与offsetMsgId释疑"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("原本生成全局 ID 的方法将客户端 IP、进程 ID 等信息组合计算生成一个字符串。方法逻辑里面包含了大量字符串和 ByteBuffer 操作，所以耗时较高。")]),t._v(" "),s("h4",{attrs:{id:"优化方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方法-2"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),s("p",[t._v("原先的方法实现中，每次调用都会创建 "),s("code",[t._v("StringBuilder")]),t._v(" 、"),s("code",[t._v("ByteBuffer")]),t._v("、多个字符串……包含大量字符串操作，字符串操作的 CPU 耗时开销很大。")]),t._v(" "),s("p",[t._v("优化的方法主要通过字符数组运算替代字符串操作，"),s("strong",[t._v("避免多余的字符串对象产生")]),t._v("；使用缓存，避免每次调用都重新计算和创建字符串对象。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("将原来的 "),s("code",[t._v("FIX_STRING")]),t._v(" 字符串换成 "),s("code",[t._v("char[]")]),t._v(" 字符数组，然后可以使用 "),s("code",[t._v("System.arraycopy")]),t._v(" 替换原来的 "),s("code",[t._v("StringBuilder")]),t._v(" 操作，避免多余对象产生。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112215086.png",alt:"image-20220411221546009"}})])]),t._v(" "),s("li",[s("p",[t._v("新增了 "),s("code",[t._v("void writeInt(char[] buffer, int pos, int value)")]),t._v("  和 "),s("code",[t._v("writeShort(char[] buffer, int pos, int value)")]),t._v(" 方法，用于写入字符串数组。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112223581.png",alt:"image-20220411222306938"}})]),t._v(" "),s("p",[t._v("原先的 "),s("code",[t._v("byte2string")]),t._v(" 方法创建了 "),s("code",[t._v("char[]")]),t._v(" 对象和 "),s("code",[t._v("String")]),t._v(" 对象，并且 String 对象构造时需要拷贝一遍 char[]。优化之后完全没有新对象产生。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112225688.png",alt:"image-20220411222509675"}})])])]),t._v(" "),s("h3",{attrs:{id:"e-当没有用到-namespace-时-避免其被多次调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e-当没有用到-namespace-时-避免其被多次调用"}},[t._v("#")]),t._v(" E. 当没有用到 namespace 时，避免其被多次调用")]),t._v(" "),s("blockquote",[s("p",[t._v("eliminate duplicated getNamespace() call when where is no namespace")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3591",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3591"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"寻找优化点-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点-4"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112236704.png",alt:"image-20220411223612434"}})]),t._v(" "),s("p",[t._v("客户端在发送消息时会调用 "),s("code",[t._v("getNamespace")]),t._v(" 方法。Namespace 功能在 RocketMQ 中用的很少，它在 4.5.1 版本中被引进，具体可以看 "),s("a",{attrs:{href:"https://github.com/apache/rocketmq/issues/1120",target:"_blank",rel:"noopener noreferrer"}},[t._v("#1120"),s("OutboundLink")],1),t._v("。它的作用是引入 Namespace 的概念，相同名称的 Topic 如果 Namespace 不同，那么可以表示不同的 Topic。")]),t._v(" "),s("h4",{attrs:{id:"优化方法-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方法-3"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),s("p",[t._v("由于大部分情况下都用不到 Namespace，所以可以增加一个判断，如果不用 Namespace，就不走 Namespace 的一些验证和匹配逻辑。")]),t._v(" "),s("p",[t._v("具体的方法很简单，在 "),s("code",[t._v("ClientConfig")]),t._v(" 设一个布尔值，用来表示 Namespace 是否初始化（是否使用），如果不使用，则跳过 "),s("code",[t._v("getNamespace()")]),t._v(" 方法中后面的逻辑。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112244007.png",alt:"image-20220411224424160"}})]),t._v(" "),s("h3",{attrs:{id:"f-去除-topic-group-名称的正则匹配检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#f-去除-topic-group-名称的正则匹配检查"}},[t._v("#")]),t._v(" F. 去除 Topic/Group 名称的正则匹配检查")]),t._v(" "),s("blockquote",[s("p",[t._v("eliminate regex match in topic/group name check")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3594",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3594"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("每次发消息时，无论是客户端还是服务端都需要检查一次这个消息的 Topic/Group 是否合法。检查通过正则表达式匹配来进行，匹配规则很简单，就是检查这个名称的字符是否在一些字符范围内 "),s("code",[t._v('String VALID_PATTERN_STR = "^[%|a-zA-Z0-9_-]+$"')]),t._v("。那么就可以把这个正则表达式匹配给优化掉，使用字符来匹配，将正则匹配简化成位图查表的过程，优化性能。")]),t._v(" "),s("p",[t._v("因为正则表达式匹配的字符编码都在 128 范围内，所以先创建一个位图，大小为 128。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" VALID_CHAR_BIT_MAP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然后用位图匹配的方式替换正则匹配：检查的字符串的每一个字符是否在位图中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112318938.png",alt:"image-20220411231805018"}})]),t._v(" "),s("p",[t._v("注意这里有一句")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将位图从堆复制到栈里（本地变量），提高下面循环的变量访问速度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bitMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" VALID_CHAR_BIT_MAP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("将静态变量位图复制到局部变量中，这样做的用意是将堆中的变量复制到栈上（因为局部变量都位于栈），提高下面循环中访问该位图的速度。")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("栈上存储的数据，很大机会会被虚拟机分配至物理机器的高速寄存器中存储。因而读写效率比从堆内存中读写高很多。")]),t._v(" "),s("li",[t._v("栈上分配的数据，释放时只需要通过移动栈顶指针，就可以随着栈帧出栈而自动销毁。而堆内存的释放由垃圾回收器负责完成，这一过程中整理和回收内存都需要消耗更多的时间。")]),t._v(" "),s("li",[t._v("栈操作可以被 JIT 优化，得到 CPU 指令的加速")]),t._v(" "),s("li",[t._v("栈没有碎片，寻址间距短，可以被 CPU 预测行为")]),t._v(" "),s("li",[t._v("栈无需释放内存和进行随机寻址")])])]),t._v(" "),s("h3",{attrs:{id:"g-支持发送-batch-消息时支持不同的-topic-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#g-支持发送-batch-消息时支持不同的-topic-queue"}},[t._v("#")]),t._v(" G. 支持发送 batch 消息时支持不同的 Topic/Queue")]),t._v(" "),s("blockquote",[s("p",[t._v("support send batch message with different topic/queue")])]),t._v(" "),s("p",[t._v("该改动依赖 Part.B ，还未提交 PR")]),t._v(" "),s("h3",{attrs:{id:"h-避免无谓的-stringbuilder-扩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#h-避免无谓的-stringbuilder-扩容"}},[t._v("#")]),t._v(" H. 避免无谓的 StringBuilder 扩容")]),t._v(" "),s("blockquote",[s("p",[t._v("eliminate StringBuilder auto resize in PullRequestHoldService.buildKey() when topic length is greater than 14, this method called twice for each message")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3612",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3612"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在 Broker 处理消息消费逻辑时，如果长轮询被启用，"),s("code",[t._v("PullRequestHoldService#buildKey")]),t._v(" 每条消息会被调用 2 次。长轮询相关逻辑请移步"),s("a",{attrs:{href:"https://github.com/HScarb/knowledge/blob/master/rocketmq/20220301-rocketmq-longpolling-pullrequestholdservice.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("之前的分析"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该方法中初始化一个 StringBuilder，默认长度为 16。StringBuilder 会将 Topic 和 QueueId 进行拼接，如果 Topic 名称过长，会造成 StringBuilder 的扩容，内部包含字符串的拷贝。在比较坏的情况下，扩容可能会发生多次。")]),t._v(" "),s("p",[t._v("那么既然已经直到 Topic 的长度，为什么不在 StringBuilder 初始化的时候就设定长度呢？这就是这个优化的改动。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112326976.png",alt:"image-20220411232605135"}})]),t._v(" "),s("p",[t._v("为什么这里是 "),s("code",[t._v("toipic.length() + 5")]),t._v("？因为一般 QueueId 不会超过 4 位数（一个 Topic 下面不会超过 9999 个队列），再加上一个分隔符，得到 5。")]),t._v(" "),s("h3",{attrs:{id:"i-避免无谓的-stringbuffer-扩容和-string-格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-避免无谓的-stringbuffer-扩容和-string-格式化"}},[t._v("#")]),t._v(" I. 避免无谓的 StringBuffer 扩容和 String 格式化")]),t._v(" "),s("blockquote",[s("p",[t._v("Avoid unnecessary StringBuffer resizing and String Formatting")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3619",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3619"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"寻找优化点-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点-5"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112336235.png",alt:""}})]),t._v(" "),s("p",[t._v("从火焰图上看出，在 Broker 处理消息消费消息请求时，有许多 "),s("code",[t._v("String.format")]),t._v(" 方法开销非常大，这些方法都是数据统计用的，用来拼接数据统计字典的 Key。可以想办法进行优化。")]),t._v(" "),s("h4",{attrs:{id:"优化方法-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方法-4"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),s("p",[t._v("首先这里面有使用 StringBuffer 拼接的逻辑，也没有预先设定长度，存在扩容可能性。这里也没有多线程的情况，所以改成 StringBuilder，并且先计算好长度，避免扩容。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112345605.png",alt:"image-20220411234502755"}})]),t._v(" "),s("h3",{attrs:{id:"j-在写-consumequeue-和-从节点的-commitlog-时-使用-mmap-而不是-filechannel-提升消息消费-tps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#j-在写-consumequeue-和-从节点的-commitlog-时-使用-mmap-而不是-filechannel-提升消息消费-tps"}},[t._v("#")]),t._v(" J. 在写 ConsumeQueue 和 从节点的 CommitLog 时，使用 MMap 而不是 FileChannel，提升消息消费 TPS")]),t._v(" "),s("blockquote",[s("p",[t._v("Use MappedByteBuffer instead of FileChannel to write consume queue and slave commitlog.")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3657",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3657"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("当消费的 Queue 数量特别多时（ 600 个），消费的 TPS 跟不上。即在 Queue 比较少时（72 个）消费速度可以跟上生产速度（20W），但是当 Queue 比较多时，消费速度只有 7W。")]),t._v(" "),s("p",[t._v("这个修改可以提升 Queue 特别多时的消费速度。")]),t._v(" "),s("ul",[s("li",[t._v("72 个 Queue，消费速度从 7W 提升到 20W")]),t._v(" "),s("li",[t._v("600 个 Queue，消费速度从 7W 提升到 11W")])]),t._v(" "),s("h4",{attrs:{id:"寻找优化点-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点-6"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[t._v("对 Broker 进行采样，发现创建消费索引的 reput 线程中有较大的耗时占比。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112355747.png",alt:""}})]),t._v(" "),s("p",[t._v("从火焰图上可以看出，FileChannel 写数据的耗时占比比较大，有没有办法来优化一下？")]),t._v(" "),s("h4",{attrs:{id:"优化方法-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方法-5"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),s("p",[t._v("我们知道 RocketMQ 写 CommitLog 是利用 MMap 来提升写入速度。但是在写 ConsumeQueue 时原先用的是 FileChannel 来写，于是这里改成也使用 MMap 来写入。")]),t._v(" "),s("p",[t._v("MappedFile.java")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112353096.png",alt:"image-20220411235301250"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112358935.png",alt:"image-20220411235759752"}})]),t._v(" "),s("p",[t._v("具体修改如上两图所示，这样修改之后会影响两个地方：ConsumeQueue （消费索引）的写入和 Slave 节点 CommitLog 的写入")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112353383.png",alt:"image-20220411235323472"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204112359113.png",alt:"image-20220411235923338"}})]),t._v(" "),s("p",[t._v("优化过后构建 ConsumeQueue 的时间占比大大减少")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204120000329.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"k-将-notifymessagearriving-的调用从-reputmessageservice-线程移到-pullrequestholdservice-线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#k-将-notifymessagearriving-的调用从-reputmessageservice-线程移到-pullrequestholdservice-线程"}},[t._v("#")]),t._v(" K. 将 notifyMessageArriving() 的调用从 ReputMessageService 线程移到 PullRequestHoldService 线程")]),t._v(" "),s("blockquote",[s("p",[t._v("move execution of notifyMessageArriving() from ReputMessageService thread to PullRequestHoldService thread")]),t._v(" "),s("p",[t._v("This commit speed up consume qps greatly, in our test up to 200,000 qps.")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/rocketmq/pull/3659",target:"_blank",rel:"noopener noreferrer"}},[t._v("#3659"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("（该提交未合入 4.9.3 版本，当前仍未合入）")]),t._v(" "),s("p",[t._v("这一部分其实也是为了优化 Part.J 中所说的消费速度所做的另一个改动。经过 Part.J 的修改，600 队列下的消费 TPS 能够达到 10w（生产 20w）。这个修改将消费 TPS 提升到 20w。")]),t._v(" "),s("h4",{attrs:{id:"寻找优化点-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找优化点-7"}},[t._v("#")]),t._v(" 寻找优化点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204132323403.png",alt:""}})]),t._v(" "),s("p",[t._v("依然是通过查看火焰图的方法，查看到构造消费索引的方法中包含了 "),s("code",[t._v("notifyMessageArriving()")]),t._v(" 这样一个方法，占用较大快的 CPU 时间。")]),t._v(" "),s("p",[t._v("这个方法具体在 "),s("a",{attrs:{href:"https://github.com/HScarb/knowledge/blob/master/rocketmq/20220301-rocketmq-longpolling-pullrequestholdservice.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("轮询机制"),s("OutboundLink")],1),t._v(" 这篇文章中有详细解释。消息消费的轮询机制指的是在 Push 消费时，如果没有新消息不会马上返回，而是挂起一段时间再重试查询。")]),t._v(" "),s("p",[s("code",[t._v("notifyMessageArriving()")]),t._v(" 的作用是在收到消息时提醒消费者，有新消息来了可以消费了，这样消费者会马上解除挂起状态开始消费消息。")]),t._v(" "),s("p",[t._v("这里的优化点就是想办法把这个方法逻辑从构建消费索引的逻辑中抽离出去。")]),t._v(" "),s("h4",{attrs:{id:"优化方案-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方案-1"}},[t._v("#")]),t._v(" 优化方案 1")]),t._v(" "),s("p",[t._v("首先想到的方法是将 "),s("code",[t._v("notifyMessageArriving()")]),t._v(" 用一个单独的线程异步调用。于是在 "),s("code",[t._v("PullRequestHoldService")]),t._v(" 里面采用生产-消费模式，启动了一个新的工作线程，将 notify 任务扔到一个队列中，让工作线程去处理，主线程直接返回。")]),t._v(" "),s("p",[t._v("工作线程每次从队列中 "),s("code",[t._v("poll")]),t._v(" 一批任务，批量进行处理（1000 个）。经过这个改动，TPS 可以上升到 20w，但这带来了另一个问题——消息消费的延迟变高，达到 40+ms。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204151125382.png",alt:"循环等待 0.1s 直到新消息来唤醒线程"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202204151126339.png",alt:"新消息来了创建异步任务并唤醒线程"}})]),t._v(" "),s("p",[t._v("延迟变高的原因是—— RocketMQ 中 "),s("code",[t._v("ServiceThread")]),t._v(" 工作线程的 "),s("code",[t._v("wakeup()")]),t._v(" 和 "),s("code",[t._v("waitForRunning()")]),t._v(" 是弱一致的，没有加锁而是采用 CAS 的方法，造成多线程情况下可能会等待直到超时。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wakeup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasNotified"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        waitPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("countDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// notify")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitForRunning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasNotified"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onWaitEnd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//entry to wait")]),t._v("\n    waitPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        waitPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MILLISECONDS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Interrupted"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        hasNotified"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onWaitEnd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"优化方案-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方案-2"}},[t._v("#")]),t._v(" 优化方案 2")]),t._v(" "),s("p",[t._v("这个方案是实际提交的优化方案，方案比较复杂。主要的思想就是将原先的每条消息都通知一次转化为批通知，减少通知次数，减少通知开销以提升性能。")]),t._v(" "),s("p",[t._v("同样用生产-消费模式，为了同时保证低延迟和高吞吐引入了 "),s("code",[t._v("PullNotifyQueue")]),t._v("。生产者和消费者仍然是操作通知任务")]),t._v(" "),s("p",[t._v("生产者线程将消息 "),s("code",[t._v("put")]),t._v(" 到队列中，消费者调用 "),s("code",[t._v("drain")]),t._v(" 方法消费。")]),t._v(" "),s("p",[s("code",[t._v("drain")]),t._v(" 方法中根据消费 TPS 做了判断")]),t._v(" "),s("ul",[s("li",[t._v("如果 TPS 小于阈值，则拉到一个任务马上进行处理")]),t._v(" "),s("li",[t._v("如果 TPS 大于阈值（默认 10w），批量拉任务进行通知。一批任务只需要一次 notify（原先每个消息都会通知一次）。此时会略微增加消费时延，换来的是消费性能大幅提升。")])]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("本文介绍了 RocketMQ 4.9.3 版本中的性能优化，主要优化了消息生产的速度和大量队列情况下消息消费的速度。")]),t._v(" "),s("p",[t._v("优化的步骤是根据 CPU 耗时进行采样形成火焰图，观察火焰图中时间占比较高的方法进行针对性优化。")]),t._v(" "),s("p",[t._v("总结一下用到的优化方法主要有")]),t._v(" "),s("ul",[s("li",[t._v("代码硬编码属性，用代码复杂度换性能")]),t._v(" "),s("li",[t._v("对字符串和字节数组操作时减少创建和拷贝")]),t._v(" "),s("li",[t._v("对于要多次计算的操作，缓存其结果")]),t._v(" "),s("li",[t._v("锁内的操作尽量移动到锁外进行，提前进行计算或者用函数式接口懒加载")]),t._v(" "),s("li",[t._v("使用更高效的容器，如 Netty "),s("code",[t._v("ByteBuf")])]),t._v(" "),s("li",[t._v("使用容器时在初始化时指定长度，避免动态扩容")]),t._v(" "),s("li",[t._v("主流程上的分支操作，使用异步而非同步")]),t._v(" "),s("li",[t._v("对于磁盘 I/O，MMap 和 FileChannel 的选择，需要实际压测，大部分情况下 MMap 速度更快且更稳定；每次写入较大数据长度时（4k 左右） FileChannel 速度才更快。具体压测结果请看 "),s("a",{attrs:{href:"https://github.com/HScarb/java-io-benchmark",target:"_blank",rel:"noopener noreferrer"}},[t._v("java-io-benchmark"),s("OutboundLink")],1)])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg",alt:""}})])])}),[],!1,null,null,null);a.default=e.exports}}]);