import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c as o,a as n,b as s,d as c,e as l}from"./app-873f5e35.js";const i={},r={href:"http://hscarb.github.io/other/99991231-lxf-js-note.html",target:"_blank",rel:"noopener noreferrer"},u=l(`<h1 id="lxf-js-note" tabindex="-1"><a class="header-anchor" href="#lxf-js-note" aria-hidden="true">#</a> lxf-js-note</h1><h2 id="_1-快速入门" tabindex="-1"><a class="header-anchor" href="#_1-快速入门" aria-hidden="true">#</a> 1. 快速入门</h2><h3 id="_1-2-数据类型和变量" tabindex="-1"><a class="header-anchor" href="#_1-2-数据类型和变量" aria-hidden="true">#</a> 1.2 数据类型和变量</h3><h4 id="_1-2-1-数据类型" tabindex="-1"><a class="header-anchor" href="#_1-2-1-数据类型" aria-hidden="true">#</a> 1.2.1 数据类型</h4><p>JS 中定义了以下几种数据类型：</p><ul><li><p>Number</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// 整数123</span>
<span class="token number">0.456</span><span class="token punctuation">;</span> <span class="token comment">// 浮点数0.456</span>
<span class="token number">1.2345e3</span><span class="token punctuation">;</span> <span class="token comment">// 科学计数法表示1.2345x1000，等同于1234.5</span>
<span class="token operator">-</span><span class="token number">99</span><span class="token punctuation">;</span> <span class="token comment">// 负数</span>
<span class="token number">NaN</span><span class="token punctuation">;</span> <span class="token comment">// NaN表示Not a Number，当无法计算结果时用NaN表示</span>
<span class="token number">Infinity</span><span class="token punctuation">;</span> <span class="token comment">// Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>字符串</p></li><li><p>布尔值</p></li><li><p><code>null</code> 和 <code>undefined</code></p></li><li><p>数组</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建了数组[1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>对象：由键-值组成的无序集合，键都是字符串类型，值可以是任意数据类型</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;web&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mobile&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Beijing&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hasCar</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">zipcode</span><span class="token operator">:</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &#39;Bob&#39;</span>
person<span class="token punctuation">.</span>zipcode<span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>变量：变量名是大小写英文、数字、<code>$</code>和<code>_</code>的组合，且不能用数字开头</p></li></ul><h4 id="_1-2-2-比较运算符" tabindex="-1"><a class="header-anchor" href="#_1-2-2-比较运算符" aria-hidden="true">#</a> 1.2.2 比较运算符</h4><ul><li><p><code>==</code>：它会<strong>自动转换数据类型</strong>再比较，很多时候，会得到非常诡异的结果；</p></li><li><p><code>===</code>：它<strong>不会自动转换数据类型</strong>，如果数据类型不一致，返回<code>false</code>，如果一致，再比较。</p></li><li><p><code>NaN</code>这个特殊的Number与所有其他值都不相等，包括它自己。唯一能判断<code>NaN</code>的方法是通过<code>isNaN()</code>函数。</p></li><li><p>浮点数在运算过程中会产生误差。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值</p></li></ul><h4 id="_1-2-3-strict-模式" tabindex="-1"><a class="header-anchor" href="#_1-2-3-strict-模式" aria-hidden="true">#</a> 1.2.3 strict 模式</h4><p>在strict模式下运行的JavaScript代码，强制通过<code>var</code>申明变量，避免变量自动被声明为全局变量。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 在JavaScript代码的第一行写上&#39;use strict&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-3-字符串" tabindex="-1"><a class="header-anchor" href="#_1-3-字符串" aria-hidden="true">#</a> 1.3 字符串</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">这是一个
多行
字符串</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token comment">// 字符串连接</span>
<span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token string">&#39;你好, &#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;, 你今年&#39;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&#39;岁了!&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 模板字符串</span>
<span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;小明&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你好, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 你今年</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">岁了!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">// 获取长度</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">;</span>
s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 13</span>
<span class="token comment">// 获取字符</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;H&#39;</span>
s<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39; &#39;</span>
s<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;w&#39;</span>
s<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;!&#39;</span>
s<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// undefined 超出范围的索引不会报错，但一律返回undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-数组" tabindex="-1"><a class="header-anchor" href="#_1-4-数组" aria-hidden="true">#</a> 1.4 数组</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 直接给Array的length赋一个新的值会导致Array大小的变化</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 3</span>
arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
arr<span class="token punctuation">;</span> <span class="token comment">// arr变为[1, 2, 3, undefined, undefined, undefined]</span>
arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
arr<span class="token punctuation">;</span> <span class="token comment">// arr变为[1, 2]</span>

<span class="token comment">// 通过索引赋值时，索引超过了范围，同样会引起Array大小的变化</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">;</span>
arr<span class="token punctuation">;</span> <span class="token comment">// arr变为[1, 2, 3, undefined, undefined, &#39;x&#39;]</span>

<span class="token comment">// slice() 与 String 的 substring() 类似，截取部分元素</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;G&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 从索引0开始，到索引3结束，但不包括索引3: [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;]</span>
arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 从索引3开始到结束: [&#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;]</span>

<span class="token comment">// </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,18);function d(k,m){const a=p("ExternalLinkIcon");return t(),o("div",null,[n("p",null,[s("原文地址："),n("a",r,[s("http://hscarb.github.io/other/99991231-lxf-js-note.html"),c(a)])]),u])}const g=e(i,[["render",d],["__file","99991231-lxf-js-note.html.vue"]]);export{g as default};
